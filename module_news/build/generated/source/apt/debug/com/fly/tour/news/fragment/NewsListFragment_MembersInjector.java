// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.fly.tour.news.fragment;

import com.fly.tour.common.base.BaseMvpFragment_MembersInjector;
import com.fly.tour.news.presenter.NewsListPresenter;
import dagger.MembersInjector;
import javax.inject.Provider;

public final class NewsListFragment_MembersInjector implements MembersInjector<NewsListFragment> {
  private final Provider<NewsListPresenter> mPresenterProvider;

  public NewsListFragment_MembersInjector(Provider<NewsListPresenter> mPresenterProvider) {
    this.mPresenterProvider = mPresenterProvider;
  }

  public static MembersInjector<NewsListFragment> create(
      Provider<NewsListPresenter> mPresenterProvider) {
    return new NewsListFragment_MembersInjector(mPresenterProvider);
  }

  @Override
  public void injectMembers(NewsListFragment instance) {
    BaseMvpFragment_MembersInjector.injectMPresenter(instance, mPresenterProvider.get());
  }
}
