// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.fly.tour.news.inject.module;

import com.fly.tour.db.entity.NewsDetail;
import com.fly.tour.news.contract.NewsListContract;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class NewsListModule_ProviderNewsDetailViewFactory
    implements Factory<NewsListContract.View<NewsDetail>> {
  private final NewsListModule module;

  public NewsListModule_ProviderNewsDetailViewFactory(NewsListModule module) {
    this.module = module;
  }

  @Override
  public NewsListContract.View<NewsDetail> get() {
    return Preconditions.checkNotNull(
        module.providerNewsDetailView(),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<NewsListContract.View<NewsDetail>> create(NewsListModule module) {
    return new NewsListModule_ProviderNewsDetailViewFactory(module);
  }
}
