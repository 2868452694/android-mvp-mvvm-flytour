// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.fly.tour.news.inject.module;

import com.fly.tour.news.contract.NewsDetailContract;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class NewsDetailModule_ProviderNewsDetailViewFactory
    implements Factory<NewsDetailContract.View> {
  private final NewsDetailModule module;

  public NewsDetailModule_ProviderNewsDetailViewFactory(NewsDetailModule module) {
    this.module = module;
  }

  @Override
  public NewsDetailContract.View get() {
    return Preconditions.checkNotNull(
        module.providerNewsDetailView(),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<NewsDetailContract.View> create(NewsDetailModule module) {
    return new NewsDetailModule_ProviderNewsDetailViewFactory(module);
  }
}
